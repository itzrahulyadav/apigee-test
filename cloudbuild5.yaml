steps:
  - name: gcr.io/cloud-builders/gcloud
    args:
      - '-c'
      - |
        if [[ "$BRANCH_NAME" == "prod" ]]; then
          echo "deploying to prod-u"
          echo "prod-u" > /workspace/env.txt
        else
          echo "Unknown branch: $BRANCH_NAME"
          exit 1
        fi
         
    dir: Apigee-CICD-Pipeline
    id: Check branch
    waitFor:
      - '-'
    entrypoint: bash
  - name: gcr.io/cloud-builders/gcloud
    args:
      - '-c'
      - >
        export build_token="$(gcloud auth application-default
        print-access-token)"

        echo "build_token=$build_token" > /workspace/build_vars
    dir: Apigee-CICD-Pipeline
    id: Generate token
    waitFor:
      - Check branch
    entrypoint: bash
  - name: gcr.io/cloud-builders/mvn
    args:
      - '-c'
      - |

        ENV=$(cat /workspace/env.txt)
        mvn -f pom.xml -ntp process-resources apigee-enterprise:configure \
          -Pdev -Dorg=${_PROJECT} -Denv=$$ENV
    dir: Apigee-CICD-Pipeline
    id: Package bundle
    waitFor:
      - Generate token
    entrypoint: bash
  - name: gcr.io/cloud-builders/mvn
    args:
      - '-c'
      - >
        source /workspace/build_vars

        echo "Token: $build_token"


        API_NAME=$(mvn -q \
          -Dexec.executable=echo \
          -Dexec.args='${project.artifactId}' \
          --non-recursive exec:exec)

        echo "API Proxy name: $$API_NAME"

        ENV=$(cat /workspace/env.txt)

        CURRENT_REVS=$(curl -s -H "Authorization: Bearer $build_token" \
                     "https://apigee.googleapis.com/v1/organizations/${_PROJECT}/environments/$${ENV}/deployments" | \
                      grep -A5 "\"apiProxy\": \"$${API_NAME}\"" | grep '"revision":' | sed -E 's/.*"revision": "([^"]+)".*/\1/')

        echo $$CURRENT_REVS
          
        if [ -n "$${CURRENT_REVS}" ] && [ "$${CURRENT_REVS}" != "[]" ]; then
          REVISIONS=$(echo "$$CURRENT_REVS" | tr -d '[],"' | tr ' ' '\n' | tr -d '\r' | grep -E '^[0-9]+$')
          LATEST_REV=$(echo "$$REVISIONS" | sort -n | tail -1)
          NEXT_REV=$$((LATEST_REV+1))
          echo "Latest deployed revision: $$LATEST_REV"
          echo "Next revision to be deployed: $$NEXT_REV"
        else
          echo "No existing revisions found. This will be revision 1."
        fi


        ENV=$(cat /workspace/env.txt)

        mvn -f pom.xml -ntp -X apigee-enterprise:deploy -Pdev -Dorg=${_PROJECT}
        -Denv=$$ENV -Dbearer=${build_token} 
    dir: Apigee-CICD-Pipeline
    id: Deploy bundle
    waitFor:
      - Package bundle
    entrypoint: bash
options:
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET
substitutions:
  _PROJECT: <project_name>
