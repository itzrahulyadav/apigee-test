substitutions:
  _APIGEE_HOST: "34.54.45.250.nip.io"
  _APIGEE_ENV: "eval"
  _PROJECT: "oasis-0000"
  _API_NAME: "simple-proxy"
  _BUCKET_NAME: "apigee-proxy-bundles"  # Change this to your GCS bucket name
  _BUNDLE_PATH: "bundles/${_API_NAME}.zip"

steps:
  # Step 1: Generate Access Token
  - name: 'gcr.io/cloud-builders/gcloud'
    id: "Generate token"
    waitFor: ["-"]
    entrypoint: 'bash'
    args:
      - -c
      - |
        export build_token="$(gcloud auth application-default print-access-token)"
        echo "build_token=$build_token" > /workspace/build_vars

  # Step 2: Package bundle (only for dev branch)
  - name: 'gcr.io/cloud-builders/mvn'
    id: "Package bundle"
    waitFor: ["Generate token"]
    entrypoint: 'bash'
    args:
      - -c
      - |
        source /workspace/build_vars
        echo "Current branch: ${BRANCH_NAME}"
        if [[ "${BRANCH_NAME}" == "main" ]]; then
          echo "Packaging bundle for UAT..."
          mvn -f pom.xml -ntp process-resources apigee-enterprise:configure \
            -Pdev -Dorg=${_PROJECT} -Denv=${_APIGEE_ENV}

          echo "Zipping proxy bundle..."
          zip -r /workspace/${_API_NAME}.zip target/apiproxy
          echo "Uploading to GCS..."
          gsutil cp /workspace/${_API_NAME}.zip gs://${_BUCKET_NAME}/${_BUNDLE_PATH}
        else
          echo "Skipping packaging (non-dev branch)..."
        fi

  # Step 3: Deploy bundle
  - name: 'gcr.io/cloud-builders/mvn'
    id: "Deploy bundle"
    waitFor: ["Package bundle"]
    entrypoint: 'bash'
    args:
      - -c
      - |
        source /workspace/build_vars
        echo "Deploying proxy for branch: ${BRANCH_NAME}"

        if [[ "${BRANCH_NAME}" == "main" ]]; then
          echo "Deploying freshly packaged bundle to UAT..."
          mvn -f pom.xml -ntp apigee-enterprise:deploy -Pdev \
            -Dorg=${_PROJECT} -Denv=${_APIGEE_ENV} -Dbearer=${build_token} -Doverride=true
        else
          echo "Downloading existing UAT bundle from GCS..."
          gsutil cp gs://${_BUCKET_NAME}/${_BUNDLE_PATH} /workspace/${_API_NAME}.zip

          echo "Deploying existing bundle to PROD (same revision)..."
          mvn -f pom.xml -ntp apigee-enterprise:deploy -Pprod \
            -Dorg=${_PROJECT} -Denv=${_APIGEE_ENV} -Dbearer=${build_token} \
            -Dapigee.api=${_API_NAME} -Dzip.path=/workspace/${_API_NAME}.zip -Doverride=false
        fi

options:
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET
